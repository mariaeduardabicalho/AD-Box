{"ast":null,"code":"import React from\"react\";import{newContextComponents}from\"@drizzle/react-components\";import logo from\"./logo.png\";var AccountData=newContextComponents.AccountData,ContractData=newContextComponents.ContractData,ContractForm=newContextComponents.ContractForm;export default(function(_ref){var drizzle=_ref.drizzle,drizzleState=_ref.drizzleState;// destructure drizzle and drizzleState from props\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{src:logo,alt:\"drizzle-logo\"}),/*#__PURE__*/React.createElement(\"h1\",null,\"Drizzle Examples\"),/*#__PURE__*/React.createElement(\"p\",null,\"Examples of how to get started with Drizzle in various situations.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"section\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Active Account\"),/*#__PURE__*/React.createElement(AccountData,{drizzle:drizzle,drizzleState:drizzleState,accountIndex:0,units:\"ether\",precision:3})),/*#__PURE__*/React.createElement(\"div\",{className:\"section\"},/*#__PURE__*/React.createElement(\"h2\",null,\"SimpleStorage\"),/*#__PURE__*/React.createElement(\"p\",null,\"This shows a simple ContractData component with no arguments, along with a form to set its value.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Stored Value: \"),/*#__PURE__*/React.createElement(ContractData,{drizzle:drizzle,drizzleState:drizzleState,contract:\"bank\",method:\"deposit\"})),/*#__PURE__*/React.createElement(ContractForm,{drizzle:drizzle,contract:\"SimpleStorage\",method:\"set\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"section\"},/*#__PURE__*/React.createElement(\"h2\",null,\"TutorialToken\"),/*#__PURE__*/React.createElement(\"p\",null,\"Here we have a form with custom, friendly labels. Also note the token symbol will not display a loading indicator. We've suppressed it with the \",/*#__PURE__*/React.createElement(\"code\",null,\"hideIndicator\"),\" prop because we know this variable is constant.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Total Supply: \"),/*#__PURE__*/React.createElement(ContractData,{drizzle:drizzle,drizzleState:drizzleState,contract:\"TutorialToken\",method:\"totalSupply\",methodArgs:[{from:drizzleState.accounts[0]}]}),\" \",/*#__PURE__*/React.createElement(ContractData,{drizzle:drizzle,drizzleState:drizzleState,contract:\"TutorialToken\",method:\"symbol\",hideIndicator:true})),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"My Balance: \"),/*#__PURE__*/React.createElement(ContractData,{drizzle:drizzle,drizzleState:drizzleState,contract:\"TutorialToken\",method:\"balanceOf\",methodArgs:[drizzleState.accounts[0]]})),/*#__PURE__*/React.createElement(\"h3\",null,\"Send Tokens\"),/*#__PURE__*/React.createElement(ContractForm,{drizzle:drizzle,contract:\"TutorialToken\",method:\"transfer\",labels:[\"To Address\",\"Amount to Send\"]})),/*#__PURE__*/React.createElement(\"div\",{className:\"section\"},/*#__PURE__*/React.createElement(\"h2\",null,\"ComplexStorage\"),/*#__PURE__*/React.createElement(\"p\",null,\"Finally this contract shows data types with additional considerations. Note in the code the strings below are converted from bytes to UTF-8 strings and the device data struct is iterated as a list.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"String 1: \"),/*#__PURE__*/React.createElement(ContractData,{drizzle:drizzle,drizzleState:drizzleState,contract:\"ComplexStorage\",method:\"string1\",toUtf8:true})),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"String 2: \"),/*#__PURE__*/React.createElement(ContractData,{drizzle:drizzle,drizzleState:drizzleState,contract:\"ComplexStorage\",method:\"string2\",toUtf8:true})),/*#__PURE__*/React.createElement(\"strong\",null,\"Single Device Data: \"),/*#__PURE__*/React.createElement(ContractData,{drizzle:drizzle,drizzleState:drizzleState,contract:\"ComplexStorage\",method:\"singleDD\"})));});","map":{"version":3,"sources":["/home/raul/Dropbox/AtivosDigitais/Blockchain/Bank/app/src/MyComponent.js"],"names":["React","newContextComponents","logo","AccountData","ContractData","ContractForm","drizzle","drizzleState","from","accounts"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { newContextComponents } from \"@drizzle/react-components\";\nimport logo from \"./logo.png\";\n\nconst { AccountData, ContractData, ContractForm } = newContextComponents;\n\nexport default ({ drizzle, drizzleState }) => {\n  // destructure drizzle and drizzleState from props\n  return (\n    <div className=\"App\">\n      <div>\n        <img src={logo} alt=\"drizzle-logo\" />\n        <h1>Drizzle Examples</h1>\n        <p>\n          Examples of how to get started with Drizzle in various situations.\n        </p>\n      </div>\n\n      <div className=\"section\">\n        <h2>Active Account</h2>\n        <AccountData\n          drizzle={drizzle}\n          drizzleState={drizzleState}\n          accountIndex={0}\n          units=\"ether\"\n          precision={3}\n        />\n      </div>\n\n      <div className=\"section\">\n        <h2>SimpleStorage</h2>\n        <p>\n          This shows a simple ContractData component with no arguments, along\n          with a form to set its value.\n        </p>\n        <p>\n          <strong>Stored Value: </strong>\n          <ContractData\n            drizzle={drizzle}\n            drizzleState={drizzleState}\n            contract=\"bank\"\n            method=\"deposit\"\n          />\n        </p>\n        <ContractForm drizzle={drizzle} contract=\"SimpleStorage\" method=\"set\" />\n      </div>\n\n      <div className=\"section\">\n        <h2>TutorialToken</h2>\n        <p>\n          Here we have a form with custom, friendly labels. Also note the token\n          symbol will not display a loading indicator. We've suppressed it with\n          the <code>hideIndicator</code> prop because we know this variable is\n          constant.\n        </p>\n        <p>\n          <strong>Total Supply: </strong>\n          <ContractData\n            drizzle={drizzle}\n            drizzleState={drizzleState}\n            contract=\"TutorialToken\"\n            method=\"totalSupply\"\n            methodArgs={[{ from: drizzleState.accounts[0] }]}\n          />{\" \"}\n          <ContractData\n            drizzle={drizzle}\n            drizzleState={drizzleState}\n            contract=\"TutorialToken\"\n            method=\"symbol\"\n            hideIndicator\n          />\n        </p>\n        <p>\n          <strong>My Balance: </strong>\n          <ContractData\n            drizzle={drizzle}\n            drizzleState={drizzleState}\n            contract=\"TutorialToken\"\n            method=\"balanceOf\"\n            methodArgs={[drizzleState.accounts[0]]}\n          />\n        </p>\n        <h3>Send Tokens</h3>\n        <ContractForm\n          drizzle={drizzle}\n          contract=\"TutorialToken\"\n          method=\"transfer\"\n          labels={[\"To Address\", \"Amount to Send\"]}\n        />\n      </div>\n\n      <div className=\"section\">\n        <h2>ComplexStorage</h2>\n        <p>\n          Finally this contract shows data types with additional considerations.\n          Note in the code the strings below are converted from bytes to UTF-8\n          strings and the device data struct is iterated as a list.\n        </p>\n        <p>\n          <strong>String 1: </strong>\n          <ContractData\n            drizzle={drizzle}\n            drizzleState={drizzleState}\n            contract=\"ComplexStorage\"\n            method=\"string1\"\n            toUtf8\n          />\n        </p>\n        <p>\n          <strong>String 2: </strong>\n          <ContractData\n            drizzle={drizzle}\n            drizzleState={drizzleState}\n            contract=\"ComplexStorage\"\n            method=\"string2\"\n            toUtf8\n          />\n        </p>\n        <strong>Single Device Data: </strong>\n        <ContractData\n          drizzle={drizzle}\n          drizzleState={drizzleState}\n          contract=\"ComplexStorage\"\n          method=\"singleDD\"\n        />\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}